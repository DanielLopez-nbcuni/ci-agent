#!/usr/bin/env bash

# Build Artifact Copy (build-acp)
# Copy build artifacts into S3
#
# Usage: build-acp <source>

# Abort if anything failse
set -e

# Initialize minio client (mc) configuration for S3
# AWS API keys must be set in the build settings
mc config host add s3 https://s3.amazonaws.com ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}

source=${1}
destination="s3/${ARTIFACTS_BUCKET_NAME}/${ARTIFACTS_BUCKET_PATH}"

# Create bucket if it does not exist
mc mb "s3/${ARTIFACTS_BUCKET_NAME}"
# Upload artifact into the bucket and get the list of files at the destination
mc cp -r ${source} ${destination}
# Set read-only permissions on BUCKET_PATH
# Access is possible only if BUCKET_PATH is known (parent bucket stays private => XML listing of bucket objects disabled)
mc policy download "s3/${ARTIFACTS_BUCKET_NAME}/${ARTIFACTS_BUCKET_PATH}"

echo "Build artifacts upload completed:"
echo "${ARTIFACTS_URL}"
echo "Files:"
mc ls ${destination}

# Post artifacts to Bitbucket build status API
if [[ "$BITBUCKET_REPO_SLUG" != "" ]]; then
	echo "Posting artifacts URL to Bitbucket..."

	BUILD_STATUS_URL="${ARTIFACTS_URL}"
	BUILD_STATUS_PAYLOAD="{\"key\": \"artifacts\", \"state\": \"SUCCESSFUL\", \"name\": \"Build artifacts\", \"url\": \"${BUILD_STATUS_URL}\"}"

	BITBUCKET_API_URL="https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/commit/${BITBUCKET_COMMIT}/statuses/build"
	curl -sS -H "Content-Type: application/json" -X POST --user "${BITBUCKET_API_AUTH}" -d "${BUILD_STATUS_PAYLOAD}" "${BITBUCKET_API_URL}" >/dev/null
else
	echo "This command only works in Bitbucket Pipelines"
fi
